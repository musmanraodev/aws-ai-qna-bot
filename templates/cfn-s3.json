{
  "Resources": {
    "clear": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref":"BootstrapBucket"},
          "S3Key": {"Fn::Join":["",[
            {"Ref":"BootstrapPrefix"},
            "/lambda/cfn-s3.zip"
          ]]}
        },
        "Environment": {
          "Variables": {
            "REGION": {
              "Ref": "AWS::Region"
            }
          }
        },
        "Handler": "handler.handler",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "clearRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    },
    "unzip": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref":"BootstrapBucket"},
          "S3Key": {"Fn::Join":["",[
            {"Ref":"BootstrapPrefix"},
            "/lambda/cfn-s3.zip"
          ]]}
        },
        "Environment": {
          "Variables": {
            "REGION": {
              "Ref": "AWS::Region"
            }
          }
        },
        "Handler": "handler.handler",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "unzipRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    },
    "clearPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:DeleteObject",
                "s3:ListBucket"
              ],
              "Resource": [
                {"Fn::Join":["",[
                    "arn:aws:s3:::",
                    {"Ref": "DstBucket"},
                    "/*"
                ]]},
                {"Fn::Join":["",[
                    "arn:aws:s3:::",
                    {"Ref": "DstBucket"}
                ]]}
              ]
            }
          ]
        }
      }
    },
    "unzipPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [{"Fn::Join":["",[
                    "arn:aws:s3:::",
                    {"Ref": "BootstrapBucket"},"/",
                    {"Ref": "BootstrapPrefix"},"/",
                    "website.zip"
                ]]}
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [{"Fn::Join":["",[
                    "arn:aws:s3:::",
                    {"Ref": "DstBucket"},
                    "/*"
                ]]}
              ]
            }
          ]
        }
      }
    },
    "clearRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          {
            "Ref": "clearPolicy"
          }
        ]
      }
    },
    "unzipRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          {
            "Ref": "unzipPolicy"
          }
        ]
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloudformation custom resource lambda functions to unzip website from boostrap bucket to hosting bucket and clear bucket on delete",
  "Mappings": {},
  "Outputs": {
    "clearArn": {
      "Value": {
        "Fn::GetAtt": [
          "clear",
          "Arn"
        ]
      }
    },
    "unzipArn": {
      "Value": {
        "Fn::GetAtt": [
          "unzip",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "DstBucket": {
      "Type": "String"
    },
    "BootstrapBucket":{
        "Type":"String"
    },
    "BootstrapPrefix":{
        "Type":"String"
    }
  }
}
