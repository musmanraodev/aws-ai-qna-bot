{
  "Resources": {
    "API": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Ref": "AWS::StackName"
        }
      },
      "DependsOn": "InvokePermission"
    },
    "Deployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "API"
        }
      },
      "DependsOn": [
        "infoGet",
        "RootPut",
        "RootPost",
        "RootGet",
        "SearchGet",
        "QuestionPut",
        "QuestionDelete"
      ]
    },
    "Stage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "RestApiId": {
          "Ref": "API"
        },
        "StageName": "api",
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ]
      }
    },
    "InvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Arn"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "Search": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "PathPart": "search",
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "Question": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "PathPart": "{Id}",
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "Health": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "PathPart": "health",
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "Info": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "PathPart": "info",
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayCloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "ApiGatewayRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": {
                    "Ref": "Arn"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "RootPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "ApiGatewayRole",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            },
            {
              "StatusCode": 400
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"ADD\",",
                  "\"Body\":$input.body",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "RootGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"LIST\",",
                  "\"From\":\"$input.params('from')\"",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "RootPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"SAVE\"",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "API",
            "RootResourceId"
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "SearchGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"SEARCH\",",
                  "\"Query\":\"$input.params('query')\",",
                  "\"From\":\"$input.params('from')\"",
                  "}"
                ]
              ]
            }
          }
        },
        "RequestParameters": {
          "method.request.querystring.query": true
        },
        "ResourceId": {
          "Ref": "Search"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "QuestionPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"ADD\",",
                  "\"Body\":$input.body",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Ref": "Question"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "QuestionDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"DELETE\",",
                  "\"Id\":\"$input.params('Id')\"",
                  "}"
                ]
              ]
            }
          }
        },
        "RequestParameters": {
          "method.request.path.Id": true
        },
        "ResourceId": {
          "Ref": "Question"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "HealthGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"PING\"",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Ref": "Health"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    },
    "infoGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "Arn"
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"Command\":\"INFO\"",
                  "}"
                ]
              ]
            }
          }
        },
        "ResourceId": {
          "Ref": "Info"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          },
          {
            "StatusCode": 400
          }
        ],
        "RestApiId": {
          "Ref": "API"
        }
      }
    }
  },
  "Conditions": {},
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "lambda function to build a lambda function",
  "Mappings": {},
  "Outputs": {
    "Url": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Ref": "API"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com"
          ]
        ]
      }
    },
    "Stage": {
      "Value": "api"
    }
  },
  "Parameters": {
    "Arn": {
      "Type": "String"
    }
  }
}
