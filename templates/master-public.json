{
 "Parameters": {
  "AdminPassword": {
   "Type": "String",
   "AllowedPattern": "(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z])(?=.*\\p{Punct}).*",
   "ConstraintDescription": "Password must have a length of at least 8, contain upper case, lower case, numbers, and special characters.",
   "NoEcho": true
  }
 },
 "Resources": {
  "Variable": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "aws-bigdata-blog",
     "S3Key": {
      "Fn::Join": [
       "",
       [
        "artifacts/aws-ai-qna-bot",
        "/lambda/cfn-variable.zip"
       ]
      ]
     }
    },
    "Environment": {
     "Variables": {
      "REGION": {
       "Ref": "AWS::Region"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": "128",
    "Role": {
     "Fn::GetAtt": [
      "VariableRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs6.10",
    "Timeout": 10
   }
  },
  "VariableRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       },
       "Action": "sts:AssumeRole"
      }
     ]
    },
    "Path": "/",
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    ]
   }
  },
  "domain": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/domain.yml"
      ]
     ]
    },
    "Parameters": {}
   }
  },
  "es": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/es.json"
      ]
     ]
    },
    "Parameters": {
     "BootstrapBucket": "aws-bigdata-blog",
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "Address": {
      "Fn::GetAtt": [
       "domain",
       "Outputs.ESAddress"
      ]
     },
     "Arn": {
      "Fn::GetAtt": [
       "domain",
       "Outputs.ESArn"
      ]
     }
    }
   }
  },
  "var": {
   "Type": "Custom::Variable",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "Variable",
      "Arn"
     ]
    },
    "Address": {
     "Fn::GetAtt": [
      "domain",
      "Outputs.ESAddress"
     ]
    },
    "DomainArn": {
     "Fn::GetAtt": [
      "domain",
      "Outputs.ESArn"
     ]
    },
    "Index": {
     "Fn::GetAtt": [
      "es",
      "Outputs.Index"
     ]
    },
    "Type": {
     "Fn::GetAtt": [
      "es",
      "Outputs.Type"
     ]
    },
    "ErrorMessage": "Sadly I encountered an error when searching for your answer. Please ask me again later.",
    "EmptyMessage": "You stumped me! Sadly I don't know how to answer your question."
   }
  },
  "Fulfilment": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/fulfilment.json"
      ]
     ]
    },
    "Parameters": {
     "Address": {
      "Fn::GetAtt": [
       "var",
       "Address"
      ]
     },
     "DomainArn": {
      "Fn::GetAtt": [
       "var",
       "DomainArn"
      ]
     },
     "BootstrapBucket": "aws-bigdata-blog",
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "Type": {
      "Fn::GetAtt": [
       "var",
       "Type"
      ]
     },
     "Index": {
      "Fn::GetAtt": [
       "var",
       "Index"
      ]
     },
     "EmptyMessage": {
      "Fn::GetAtt": [
       "var",
       "ErrorMessage"
      ]
     },
     "ErrorMessage": {
      "Fn::GetAtt": [
       "var",
       "EmptyMessage"
      ]
     }
    }
   }
  },
  "Cognito": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/cognito.json"
      ]
     ]
    },
    "Parameters": {
     "Password": {
      "Ref": "AdminPassword"
     },
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "BootstrapBucket": "aws-bigdata-blog"
    }
   }
  },
  "QnABot": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/lex.json"
      ]
     ]
    },
    "Parameters": {
     "Arn": {
      "Fn::GetAtt": [
       "Fulfilment",
       "Outputs.Arn"
      ]
     },
     "BootstrapBucket": "aws-bigdata-blog",
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "Role": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.UnauthenticatedRole"
      ]
     }
    }
   }
  },
  "Handler": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/handler.json"
      ]
     ]
    },
    "Parameters": {
     "BootstrapBucket": "aws-bigdata-blog",
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "Address": {
      "Fn::GetAtt": [
       "var",
       "Address"
      ]
     },
     "DomainArn": {
      "Fn::GetAtt": [
       "var",
       "DomainArn"
      ]
     },
     "Index": {
      "Fn::GetAtt": [
       "var",
       "Index"
      ]
     },
     "Type": {
      "Fn::GetAtt": [
       "var",
       "Type"
      ]
     },
     "ErrorMessage": {
      "Fn::GetAtt": [
       "var",
       "ErrorMessage"
      ]
     },
     "EmptyMessage": {
      "Fn::GetAtt": [
       "var",
       "EmptyMessage"
      ]
     },
     "Bot": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.Bot"
      ]
     },
     "Intent": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.Intent"
      ]
     },
     "SlotType": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.SlotType"
      ]
     }
    }
   }
  },
  "Health": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/handler.json"
      ]
     ]
    },
    "Parameters": {
     "BootstrapBucket": "aws-bigdata-blog",
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "Address": {
      "Fn::GetAtt": [
       "var",
       "Address"
      ]
     },
     "DomainArn": {
      "Fn::GetAtt": [
       "var",
       "DomainArn"
      ]
     },
     "Index": {
      "Fn::GetAtt": [
       "var",
       "Index"
      ]
     },
     "Type": {
      "Fn::GetAtt": [
       "var",
       "Type"
      ]
     },
     "Intent": "",
     "Bot": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.Bot"
      ]
     },
     "ErrorMessage": {
      "Fn::GetAtt": [
       "var",
       "ErrorMessage"
      ]
     },
     "EmptyMessage": {
      "Fn::GetAtt": [
       "var",
       "EmptyMessage"
      ]
     }
    }
   }
  },
  "api": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/api.json"
      ]
     ]
    },
    "Parameters": {
     "HealthArn": {
      "Fn::GetAtt": [
       "Health",
       "Outputs.Arn"
      ]
     },
     "HandlerArn": {
      "Fn::GetAtt": [
       "Handler",
       "Outputs.Arn"
      ]
     },
     "UserPoolArn": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.UserPoolArn"
      ]
     },
     "Role": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.AuthenticatedRole"
      ]
     },
     "Botname": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.Bot"
      ]
     },
     "PoolId": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.PoolId"
      ]
     },
     "ClientId": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.Client"
      ]
     },
     "UserPool": {
      "Fn::GetAtt": [
       "Cognito",
       "Outputs.UserPool"
      ]
     },
     "Id": {
      "Ref": "AWS::StackName"
     },
     "FulfilmentArn": {
      "Fn::GetAtt": [
       "Fulfilment",
       "Outputs.Arn"
      ]
     },
     "Utterances": {
      "Fn::Join": [
       "\n",
       [
        "uterances.1",
        "uterances.2",
        "t is a chat bot\nwhat is a data warehouse\nwhat is coronary artery disease\nwhat is an electric vehicle\ntell me about amazon alexa\ntell me about body mass index\ntell me about healthy eating\nhow do I know if I am a linux expert\nshould I stop smoking\nhow bad is excessive alcohol consumption\ndo I get enough sleep\ntell me about cloud computing\ndo I get enough exercise\nwhat is a good training program for windows\nis programming bad for you\nis bacon good for you\nwhat is a stack overflow\nshould I use a document store\ngive me advice on regular training\nwhat are the benfits of a cardio workout\nshould I learn javascript programming\nis working in support good for my career\nwhere can i learn python\nhow quickly will I recover from triple bypass surgery\nhow quickly will I find employment after graduating\nhow serious is a core dump\nwhat is a graphics processing unit\nwhat should I do when i see errors in the logfile\ntell me about serverless computing\nare computer viruses serious\nwhat is a slam dunk\nwhat is a first down\nwhat is normal blood pressure\nhow many people live in Ireland\nhow do I measure my volume\nwhat car is the fastest from zero to sixty\ntell me the benefits of green vegetables\nwhen should I call emergency services\nwhere is the nearest computer repair store\nwhen should I hire a consultant\ntell me about artificial intelligence\ndoes my family history affect my risk\nis is important to run regular backups\ndo I have an unusual appearance\nis there a gene associated with musical ability\nwhat is data science\nhow do I donate money\nhow do I volunteer time\ntell me about the phrase life is good\nwill robots rule the world\nhello\ngoodbye\nhelp"
       ]
      ]
     }
    }
   }
  },
  "adminUI": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/qna-admin-ui.json"
      ]
     ]
    },
    "Parameters": {
     "BootstrapPrefix": "artifacts/aws-ai-qna-bot",
     "BootstrapBucket": "aws-bigdata-blog"
    }
   }
  },
  "distribution": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/distribution.json"
      ]
     ]
    },
    "Parameters": {
     "StaticUrl": {
      "Fn::GetAtt": [
       "adminUI",
       "Outputs.URL"
      ]
     },
     "DynamicUrl": {
      "Fn::GetAtt": [
       "api",
       "Outputs.URL"
      ]
     }
    }
   }
  },
  "dashboard": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "/",
      [
       "https://s3.amazonaws.com",
       "aws-bigdata-blog",
       "artifacts/aws-ai-qna-bot",
       "templates/dashboard.json"
      ]
     ]
    },
    "Parameters": {
     "Name": {
      "Ref": "AWS::StackName"
     },
     "APIGateWay": {
      "Fn::GetAtt": [
       "api",
       "Outputs.Name"
      ]
     },
     "ESDomain": {
      "Fn::GetAtt": [
       "domain",
       "Outputs.ESDomain"
      ]
     },
     "Distribution": {
      "Fn::GetAtt": [
       "distribution",
       "Outputs.Id"
      ]
     },
     "BotName": {
      "Fn::GetAtt": [
       "QnABot",
       "Outputs.Bot"
      ]
     },
     "AdminLambda": {
      "Fn::GetAtt": [
       "Handler",
       "Outputs.Name"
      ]
     },
     "FulfilmentLambda": {
      "Fn::GetAtt": [
       "Fulfilment",
       "Outputs.Name"
      ]
     },
     "AdminBucketHealthCheck": {
      "Fn::GetAtt": [
       "adminUI",
       "Outputs.Check"
      ]
     },
     "CloudFrontAPIHealth": {
      "Fn::GetAtt": [
       "distribution",
       "Outputs.DynamicCheck"
      ]
     },
     "CloudFrontAdminHealth": {
      "Fn::GetAtt": [
       "distribution",
       "Outputs.StaticCheck"
      ]
     }
    }
   }
  }
 },
 "AWSTemplateFormatVersion": "2010-09-09",
 "Description": "QnABot with admin and client websites",
 "Outputs": {
  "IntentName": {
   "Value": {
    "Fn::GetAtt": [
     "QnABot",
     "Outputs.Intent"
    ]
   }
  },
  "ContentDesignerURL": {
   "Value": {
    "Fn::GetAtt": [
     "distribution",
     "Outputs.DesignerURL"
    ]
   }
  },
  "ClientURL": {
   "Value": {
    "Fn::GetAtt": [
     "distribution",
     "Outputs.ClientURL"
    ]
   }
  },
  "DashboardUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://console.aws.amazon.com/cloudwatch/home?",
      "region=",
      {
       "Ref": "AWS::Region"
      },
      "#dashboards:name=",
      {
       "Fn::GetAtt": [
        "dashboard",
        "Outputs.name"
       ]
      }
     ]
    ]
   }
  }
 }
}