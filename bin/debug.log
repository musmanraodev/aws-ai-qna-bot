
index.js
Received event:
Response: {
  "bots": [
    {
      "name": "BotPaYEx",
      "description": null,
      "status": "READY",
      "lastUpdatedDate": "2017-12-12T19:51:04.356Z",
      "createdDate": "2017-11-27T18:19:52.712Z",
      "version": "$LATEST"
    },
    {
      "name": "BotTtUnu",
      "description": null,
      "status": "FAILED",
      "lastUpdatedDate": "2017-09-12T16:30:49.259Z",
      "createdDate": "2017-09-12T16:30:49.259Z",
      "version": "$LATEST"
    }
  ],
  "nextToken": "1|eoqR6SyI0HaQ7BaJpN9NoDRru5cMt1ibnsTb/ZVX265bjZ9UIRZcrN9AaDbJnocvi7GclNTJ8qglOCw1tOc3C3IPw+fN2IBn24v4Oyy/ib1WezAK2oFmmZXT6AVoUunDfj0wiz8IbxVlrkY9XJ5Y2siuDLd3jGjsVWyEoQ0Cen9XDas17sQhgsdgo4+ayq9mvkVi5lGFIDx5G5LZVbZXcl2qJAzt5eV7AAhnnD4IFL//FdFdFnPIlJuy6knkXYKOwSyjR1+PJI8llKVkWOcsHeQhWeh3ahNWf6p/iFeCW/COk+FgxK5PglqdzHPccF8k"
}
error
result:
debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/alexa.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/alexa.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
"schema":{
    "intents": [{
        "slots": [{
            "name": "QnA_slot",
            "type": "EXAMPLE_QUESTIONS"
            }],
        "intent": "Qna_intent"
        },
        {"intent":"AMAZON.HelpIntent"},
        {"intent":"AMAZON.StopIntent"},
        {"intent":"AMAZON.CancelIntent"},
        {"intent":"AMAZON.RepeatIntent"}
    ]
}}

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "fnc":"getBot",
    "params":{
        "name":"bot",
        "versionOrAlias":"$LATEST"
    }
}                
               


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/get.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/get.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)



{
    "lambdaArn":"ar",
    "status":"BUILDING",
    "botname":"bot",
    "messages":{
        "clarification":[
            
            "1",
            
            "4"
            
        ],
        "abort":[
            
            "2",
            
            "3"
            
        ]
    },
    "_links":{
        "utterances":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/bot/utterances"
        },
        "alexa":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/bot/alexa"
        },
        "hooks":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/bot/hooks"
        }
    }
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/post.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/post.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "botname":"bot",
    "slottype":"slot",
    "intent":"intent",
    "address":"test",
    "index":"index",
    "type":"type"
}  

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/post.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/post.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{"status":"started"}

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)




{}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)




{
    
        
        "preprocess":"arn",
        
    
        
        "response":"",
        
    
        
        "log":""
        
    
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.put.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.put.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "Environment":{
        "Variables":{
        
            
            "LAMBDA_PREPROCESS":"ar",
            
        
            
            "LAMBDA_RESPONSE":"",
            
        
            
            "LAMBDA_LOG":"ad"
            
        
        }
    }
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.options.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/config.options.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "type":"object",
    "properties":{
        "preprocess":{
            "title":"Preprocessing lambda",
            "type":"string"
        },
        "response":{
            "title":"Response processing lambda",
            "type":"string"
        },
        "log":{
            "title":"Logging lambda",
            "type":"string"
        }
    }
}

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/utterance.get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/utterance.get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "fnc":"getSlotType",
    "params":{
        "name":"slot",
        "version":"$LATEST"
    }
}                
               


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/utterance.get.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/bot/utterance.get.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)



[

    "thin, or thin" ,

    "thick" 

]


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/error/error.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/error/error.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)



{
    "status":404,
    "message":"aaa"
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/health/health.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/health/health.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"GET",
    "path":"/_cluster/health"
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/health/health.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/health/health.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{"status":"health"}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/head.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/head.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"HEAD",
    "path":"/index/type/id"
}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/head.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/head.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{"status":"exists"}

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/delete.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/delete.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"DELETE",
    "path":"/index/type/id?refresh=wait_for"
}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/delete.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/delete.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)




{
    "result":"delete",
    "id":2,
    "success":2
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "endpoint":"test",
    "method":"PUT",
    "path":"/index/type/$input.params('ID')?refresh=wait_for",
    "body":{
        
            
                
                "qid" :"adad" 
            
        ,
        
            
                "questions":[
                    
                        {"q":"b"}
                        ,
                    
                        {"q":"c"}
                        
                    
                ]
            
        ,
        
            
                
                "card" :{"title":""} 
            
        
        
    }
}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)




{
    "result":"created",
    "id":2,
    "success":2
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/options.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/options.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"https://test",
    "method":"GET",
    "path":"/index/_mapping/type"
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"POST",

    "path":"/index/type/_delete_by_query?refresh=wait_for",
    "body":{
        "query":{
            "bool":{
                "must":{"match_all":{}},
                "filter":{"regexp":{
                    "qid":".*"
                }}
            }
        }
    }

}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"POST",

    "path":"/index/type/_delete_by_query?refresh=wait_for",
    "body":{
        "query":{
            "bool":{
                "must":{"match_all":{}},
                "filter":{"regexp":{
                    "qid":"$input.path('$.query')"
                }}
            }
        }
    }

}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/delete.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "message":"success",
    "count":"100"
}

debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/put.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/put.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "errors":"false",
    "results":[
        
            {
                
                "qid":1,
                "status":"200"
            },
        
            {
                
                "qid":2,
                "status":"200"
            }
        
    ]
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/put.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/collection/put.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)
{
    "endpoint":"test",
    "method":"POST",
    "path":"/_bulk?refresh=wait_for",
    "body":[
        {"index":{
            "_index":"index",
            "_type":"type",
            
            "_id":"3"
        }},
        
        {"qid":3,"a":1}
        ,
    
        {"index":{
            "_index":"index",
            "_type":"type",
            
            "_id":"2"
        }},
        
        {"qid":2,"a":2}
        
    
    ]
}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)

    



    


{
    "endpoint":"test",
    "method":"POST",
    "path":"/index/type/_search?search_type=dfs_query_then_fetch",
    "body":{
        "size":"0",
        "from":"0",
        "query": {
            
            
            "bool":{
                
                "must":{"match_all":{}}
                
            }
            
        }
        
            
                
            

        ,"sort":{
            "qid":{
                "order":"$order" 
            }
        }
        
    }
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)

    



    


{
    "endpoint":"test",
    "method":"POST",
    "path":"/index/type/_search?search_type=dfs_query_then_fetch",
    "body":{
        "size":"10",
        "from":"0",
        "query": {
            
            
            "bool":{
                
                "filter":{"regexp":{
                    "qid":"filter"
                }}
                
            }
            
        }
        
            
                
            

        ,"sort":{
            "qid":{
                "order":"$order" 
            }
        }
        
    }
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)

    



    


{
    "endpoint":"test",
    "method":"POST",
    "path":"/index/type/_search?search_type=dfs_query_then_fetch",
    "body":{
        "size":"10",
        "from":"0",
        "query": {
            
                
                    
                

            "bool": {
                "should": [{
                    "multi_match": {
                        "query": "search",
                        "fields" : ["a"]
                    }},
                    {"multi_match": {
                        "query": "",
                        "fields" : ["t"]
                    }},
                    {"nested":{  
                        "path":"questions",
                        "score_mode":"max",
                        "boost":2,
                        "query":{  
                            "match":{  
                                "questions.q":"search"
                            }
                        }
                    }} 
                ]
            }
            
            
        }
        
    }
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.resp.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/get.resp.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "total":10,
    "version":"1",
    "qa":[
        
            {
                
                "_score":10,
                
                
                    
                        "q":[
                            
                                "1"
                                ,
                            
                                "2"
                                
                            
                        ]
                    
                ,
                
                    
                        
                        "qid" :"" 
                    
                ,
                
                    
                        
                        "card" :{"a":"1"} 
                    
                
                
            },
        
            {
                
                "_score":9,
                
                
                    
                        "q":[
                            
                                "1"
                                ,
                            
                                "2"
                                
                            
                        ]
                    
                ,
                
                    
                        
                        "qid" :"" 
                    
                ,
                
                    
                        
                        "card" :{"a":"1"} 
                    
                
                
            }
        
    ]
}


debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/qa/single/put.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "endpoint":"test",
    "method":"PUT",
    "path":"/index/type/notall?refresh=wait_for",
    "body":{
        
    }
}



debug: Processed config { template: 
   { isFile: true,
     raw: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/root/info.vm',
     fullPath: '/Users/jcalho/projects/aws-ai-qna-bot/templates/api/routes/root/info.vm' },
  debug: true,
  encoding: 'utf8' } (handle-cfg.js: 48)


{
    "region":"us-east-1",
    "BotName":"bot",
    "PoolId":"$stageVariables.IdPool",
    "ClientIdClient":"$stageVariables.ClientIdClient",
    "ClientIdDesigner":"$stageVariables.ClientIdDesigner",
    "UserPool":"User-adada",
    "Id":"id",
    "_links":{
        "root":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod"
        },
        "questions":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/questions"
        },
        "bot":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/bot"
        },
        "jobs":{
            "href":"https://id.execute-api.us-east-1.amazonaws.com/prod/jobs"
        },
        "DesignerLogin":{
            "href":"$stageVariables.DesignerLoginUrl"
        },
        "ClientLogin":{
            "href":"$stageVariables.ClientLoginUrl"
        }
    }
}


{ path: '/', method: 'get' }
Request
response:
{ region: 'us-east-1',
  BotName: 'QNA_master_sixone_master_IDNsi',
  PoolId: 'us-east-1:56b4a93e-8ec0-4cd7-ab4e-2149ddb8ad88',
  ClientIdClient: 'pms9oueeovc1iqbrjk6ai66d7',
  ClientIdDesigner: '1mel35a7gf1ds8co9f1q7u303r',
  UserPool: 'us-east-1_qkIJeBOBk',
  Id: 'QnA Bot',
  _links: 
   { root: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod' },
     questions: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/questions' },
     bot: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot' },
     jobs: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs' },
     DesignerLogin: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/pages/designer' },
     ClientLogin: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/static/client.html' } } }
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/questions',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/pages/designer',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/static/client.html',
  method: 'get' }
Request
response:
response:
response:
response:
response:
response:
{ path: 'bot', method: 'get' }
Request
response:
{ lambdaArn: 'arn:aws:lambda:us-east-1:613341023709:function:QNA-master-61-master-IDN6RUAEBXNP-Qn-HandlerLambda-BIHUKYLWAIZ2',
  status: 'READY',
  botname: 'QNA_master_sixone_master_IDNsi',
  messages: 
   { clarification: [ 'Sorry, can you please repeat that?' ],
     abort: [ 'Sorry, can you please repeat that?' ] },
  _links: 
   { utterances: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/utterances' },
     alexa: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/alexa' },
     hooks: { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/hooks' } } }
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/utterances',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/alexa',
  method: 'get' }
Request
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/bot/hooks',
  method: 'get' }
Request
response:
response:
response:
{ path: 'health', method: 'get' }
Request
response:
{ path: 'pages/client', method: 'get' }
Request
response:
{ path: 'pages/designer', method: 'get' }
Request
response:
{ path: 'static/index.html', method: 'get' }
Request
response:
{ path: 'static/index.html', method: 'head' }
Request
response:
{ path: 'static/notHere.html', method: 'head' }
Request
{ path: 'questions', method: 'get' }
Request
response:
{ path: 'questions?filter=who', method: 'get' }
Request
response:
{ path: 'questions?query=who', method: 'get' }
Request
response:
{ path: 'questions?', method: 'options' }
Request
response:
{ path: '/jobs', method: 'get' }
Request
response:
{ _links: 
   { imports: 
      { href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports',
        bucket: 'qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35',
        uploadPrefix: 'data/',
        statusPrefix: 'Status/' } } }
{ href: 'https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports',
  method: 'get' }
Request
response:
{ path: 'questions/unit-test.1', method: 'HEAD' }
Request
{ path: 'questions/unit-test.1',
  method: 'PUT',
  body: 
   { qid: 'unit-test.1',
     q: [ 'who am i' ],
     a: 'i am the unit',
     _trace: 1 } }
Request
response:
{ path: 'questions/unit-test.1', method: 'HEAD' }
Request
response:
{ path: 'questions/unit-test.1', method: 'DELETE' }
Request
response:
{ path: 'questions/unit-test.1', method: 'HEAD' }
Request
{ path: 'questions/unit-test.1',
  method: 'PUT',
  body: { qid: 'unit-test.1', q: [ 'who am i' ], a: 'i am the unit' } }
Request
{ path: 'questions/unit-test.2',
  method: 'PUT',
  body: { qid: 'unit-test.2', q: [ 'who am i' ], a: 'i am the unit' } }
Request
response:
response:
{ path: 'questions',
  method: 'DELETE',
  body: { query: 'unit-test.*' } }
Request
response:
{ path: 'questions/unit-test.1', method: 'HEAD' }
Request
{ path: 'questions/unit-test.2', method: 'HEAD' }
Request
{ path: 'questions/one.test',
  method: 'PUT',
  body: { qid: 'one.test', q: [ 'who am i' ], a: 'i am the unit' } }
Request
{ path: 'questions/two.test',
  method: 'PUT',
  body: { qid: 'two.test', q: [ 'who am i' ], a: 'i am the unit' } }
Request
response:
response:
{ path: 'questions', method: 'DELETE', body: { query: 'one.*' } }
Request
response:
{ path: 'questions/one.test', method: 'HEAD' }
Request
{ path: 'questions/two.test', method: 'HEAD' }
Request
response:
{ path: 'questions',
  method: 'DELETE',
  body: { query: '.*test' } }
Request
response:
{ path: 'questions/one.test',
  method: 'PUT',
  body: { qid: 'one.test', q: [ 'who am i' ], a: 'i am the unit' } }
Request
{ path: 'questions/two.test',
  method: 'PUT',
  body: { qid: 'two.test', q: [ 'who am i' ], a: 'i am the unit' } }
Request
response:
response:
{ path: 'questions',
  method: 'DELETE',
  body: { list: [ 'one.test' ] } }
Request
response:
{ path: 'questions/one.test', method: 'HEAD' }
Request
{ path: 'questions/two.test', method: 'HEAD' }
Request
response:
{ path: 'questions',
  method: 'DELETE',
  body: { query: '.*test' } }
Request
response:
1515190794935
{ path: 'jobs', method: 'GET' }
Request
response:
tries left:100
{ path: 'jobs/imports', method: 'GET' }
Request
response:
{
  "jobs": [
    {
      "id": "1515164829757",
      "href": "https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports/1515164829757"
    },
    {
      "id": "1515168861185",
      "href": "https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports/1515168861185"
    },
    {
      "id": "1515188931588",
      "href": "https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports/1515188931588"
    },
    {
      "id": "1515190648633",
      "href": "https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports/1515190648633"
    },
    {
      "id": "1515190794935",
      "href": "https://l9ipcfjv29.execute-api.us-east-1.amazonaws.com/prod/jobs/imports/1515190794935"
    }
  ]
}
tries left:100
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 0,
  "end": 1000000,
  "buffer": "",
  "count": 0,
  "failed": 0,
  "progress": 0,
  "EsErrors": [],
  "time": {
    "rounds": 0,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:99
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 1000001,
  "end": 2000001,
  "buffer": "{\"qid\":\"bulk-test.77",
  "count": 7748,
  "failed": 0,
  "progress": 0.07701529969010615,
  "EsErrors": [
    false
  ],
  "time": {
    "rounds": 1,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:98
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 1000001,
  "end": 2000001,
  "buffer": "{\"qid\":\"bulk-test.77",
  "count": 7748,
  "failed": 0,
  "progress": 0.07701529969010615,
  "EsErrors": [
    false
  ],
  "time": {
    "rounds": 1,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:97
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 2000002,
  "end": 3000002,
  "buffer": "{\"qid\":\"bulk-test.15477\",\"q\":[\"Eius quo explicabo rem dolor molestiae maiores quibus",
  "count": 15477,
  "failed": 0,
  "progress": 0.1540305993802123,
  "EsErrors": [
    false,
    false
  ],
  "time": {
    "rounds": 2,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:96
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 3000003,
  "end": 4000003,
  "buffer": "{\"qid\":\"bulk-test.23172\",\"q\":[\"Iu",
  "count": 23172,
  "failed": 0,
  "progress": 0.23104589907031844,
  "EsErrors": [
    false,
    false,
    false
  ],
  "time": {
    "rounds": 3,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:95
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 3000003,
  "end": 4000003,
  "buffer": "{\"qid\":\"bulk-test.23172\",\"q\":[\"Iu",
  "count": 23172,
  "failed": 0,
  "progress": 0.23104589907031844,
  "EsErrors": [
    false,
    false,
    false
  ],
  "time": {
    "rounds": 3,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:94
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 4000004,
  "end": 5000004,
  "buffer": "{\"qid\":\"bulk-test.30876\",\"q\":[\"Consequatur ut voluptatem ut laborum.\"],\"a\":\"Voluptas ut debitis",
  "count": 30876,
  "failed": 0,
  "progress": 0.3080611987604246,
  "EsErrors": [
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 4,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:93
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 5000005,
  "end": 6000005,
  "buffer": "{\"qid\":\"bulk-test.38585\",\"q\":[\"Dicta qu",
  "count": 38585,
  "failed": 0,
  "progress": 0.3850764984505307,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 5,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:92
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 5000005,
  "end": 6000005,
  "buffer": "{\"qid\":\"bulk-test.38585\",\"q\":[\"Dicta qu",
  "count": 38585,
  "failed": 0,
  "progress": 0.3850764984505307,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 5,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:91
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 6000006,
  "end": 7000006,
  "buffer": "{\"qid\":\"bulk-test.46300\",\"q\":[\"Libero nulla ",
  "count": 46300,
  "failed": 0,
  "progress": 0.4620917981406369,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 6,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:90
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 7000007,
  "end": 8000007,
  "buffer": "{\"qid\":\"bulk-test.54006\",\"q\":[\"Id odit eius at eaque cupiditate odio et et.\"],\"a\":\"Ea accusantium autem place",
  "count": 54006,
  "failed": 0,
  "progress": 0.5391070978307431,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 7,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:89
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 8000008,
  "end": 9000008,
  "buffer": "{\"qid\":\"bulk-test.61682\",\"q\":[\"Doloribus qui voluptatem sapiente.\"],\"a\":\"Quo ",
  "count": 61682,
  "failed": 0,
  "progress": 0.6161223975208492,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 8,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:88
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 9000009,
  "end": 10000009,
  "buffer": "{\"qid\":\"bulk-test.69376\",\"q\":[\"Quos aut omnis eligendi qui quo.\"],\"a\":\"Explicabo qui animi similique fugiat rem culpa.\"",
  "count": 69376,
  "failed": 0,
  "progress": 0.6931376972109553,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 9,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:87
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 10000010,
  "end": 11000010,
  "buffer": "",
  "count": 77071,
  "failed": 0,
  "progress": 0.7701529969010614,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 10,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:86
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 10000010,
  "end": 11000010,
  "buffer": "",
  "count": 77071,
  "failed": 0,
  "progress": 0.7701529969010614,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 10,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:85
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 11000011,
  "end": 12000011,
  "buffer": "{\"qid\":\"bulk-test.84741\",\"q\":[\"Aut minima nam est voluptatem qui ducimus accusamu",
  "count": 84741,
  "failed": 0,
  "progress": 0.8471682965911677,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 11,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:84
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 12000012,
  "end": 13000012,
  "buffer": "{",
  "count": 92439,
  "failed": 0,
  "progress": 0.9241835962812738,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 12,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:83
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 12000012,
  "end": 13000012,
  "buffer": "{",
  "count": 92439,
  "failed": 0,
  "progress": 0.9241835962812738,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 12,
    "start": "2018-01-05T22:20:47.902Z"
  },
  "status": "InProgress",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
tries left:82
{ path: 'jobs/imports/1515190794935', method: 'GET' }
Request
response:
{
  "stride": 1000000,
  "start": 13000013,
  "end": 14000013,
  "buffer": "",
  "count": 100000,
  "failed": 0,
  "progress": 1,
  "EsErrors": [
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false
  ],
  "time": {
    "rounds": 13,
    "start": "2018-01-05T22:20:47.902Z",
    "end": "2018-01-05T22:21:48.551Z"
  },
  "status": "Complete",
  "bucket": "qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35",
  "key": "data/1515190794935",
  "version": "crjNMQpMUFw65yYOT4CLUulqwK7ABUU_"
}
{ stride: 1000000,
  start: 13000013,
  end: 14000013,
  buffer: '',
  count: 100000,
  failed: 0,
  progress: 1,
  EsErrors: 
   [ false,
     false,
     false,
     false,
     false,
     false,
     false,
     false,
     false,
     false,
     false,
     false,
     false ],
  time: 
   { rounds: 13,
     start: '2018-01-05T22:20:47.902Z',
     end: '2018-01-05T22:21:48.551Z' },
  status: 'Complete',
  bucket: 'qna-master-61-master-idn6ruaebxnp-ap-importbucket-13b4zf5c1ba35',
  key: 'data/1515190794935',
  version: 'crjNMQpMUFw65yYOT4CLUulqwK7ABUU_' }
{ path: 'jobs/imports/1515190794935', method: 'DELETE' }
Request
response:
{ path: 'questions',
  method: 'DELETE',
  body: { query: 'bulk-test.*' } }
Request
response:
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'hello' },
  sessionAttributes: { previous: '{"q":"hello"}' },
  message: 'You stumped me! Sadly I don\'t know how to answer your question.',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ intentName: null,
  sessionAttributes: { previous: '{"q":"hello"}' },
  message: 'Sorry, can you please repeat that?',
  dialogState: 'ElicitIntent',
  slotToElicit: null }
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'help' },
  sessionAttributes: { previous: '{"q":"help"}' },
  message: 'You stumped me! Sadly I don\'t know how to answer your question.',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ path: 'questions/unit-test.1',
  method: 'PUT',
  body: 
   { qid: 'unit-test.1',
     q: [ 'who am i' ],
     a: 'i am the unit',
     r: 
      { title: 'test',
        text: 'test',
        url: 'https://dummyimage.com/600x400/000/fff.png&text=hello' } } }
Request
response:
{ path: 'questions/unit-test.2',
  method: 'PUT',
  body: 
   { qid: 'unit-test.1',
     q: [ 'who are you' ],
     a: 'you are the test' } }
Request
response:
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'who am i' },
  sessionAttributes: 
   { appContext: '{"responseCard":{"version":"1","contentType":"application/vnd.amazonaws.card.generic","genericAttachments":[{"title":"test","subTitle":"test","imageUrl":"https://dummyimage.com/600x400/000/fff.png&text=hello"}]}}',
     previous: '{"qid":"unit-test.1","a":"i am the unit","q":"who am i"}' },
  message: 'i am the unit',
  dialogState: 'Fulfilled',
  slotToElicit: null,
  responseCard: 
   { version: '1',
     contentType: 'application/vnd.amazonaws.card.generic',
     genericAttachments: [ [Object] ] } }
{ intentName: null,
  sessionAttributes: 
   { appContext: '{"responseCard":{"version":"1","contentType":"application/vnd.amazonaws.card.generic","genericAttachments":[{"title":"test","subTitle":"test","imageUrl":"https://dummyimage.com/600x400/000/fff.png&text=hello"}]}}',
     previous: '{"qid":"unit-test.1","a":"i am the unit","q":"who am i"}' },
  message: 'Sorry, can you please repeat that?',
  dialogState: 'ElicitIntent',
  slotToElicit: null }
{ path: 'questions/unit-test.1', method: 'DELETE' }
Request
response:
{ path: 'questions/unit-test.2', method: 'DELETE' }
Request
response:
{ path: 'questions',
  method: 'PUT',
  body: 
   [ { qid: 'unit-test.1',
       q: [Object],
       a: 'zombies eat brains',
       t: 'zombies' },
     { qid: 'unit-test.2',
       q: [Object],
       a: 'humans eat food',
       t: 'humans' } ] }
Request
response:
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'what do zombies eat' },
  sessionAttributes: 
   { previous: '{"qid":"unit-test.1","a":"zombies eat brains","q":"what do zombies eat"}',
     topic: 'zombies' },
  message: 'zombies eat brains',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'what do they eat' },
  sessionAttributes: 
   { previous: '{"qid":"unit-test.1","a":"zombies eat brains","q":"what do they eat"}',
     topic: 'zombies' },
  message: 'zombies eat brains',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'what do humans eat' },
  sessionAttributes: 
   { previous: '{"qid":"unit-test.2","a":"humans eat food","q":"what do humans eat"}',
     topic: 'humans' },
  message: 'humans eat food',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ path: 'questions',
  method: 'PUT',
  body: 
   [ { qid: 'unit-test.1',
       q: [Object],
       a: 'zombies eat brains',
       l: 'arn:aws:lambda:us-east-1:613341023709:function:QNA-lambda-1-Lambda-8DKPYMJUPPLF' } ] }
Request
response:
{ intentName: 'fulfilment_IntentLdtmN',
  slots: { slot: 'what do zombies eat' },
  sessionAttributes: { previous: '{"qid":"unit-test.1","a":"zombies eat brains","q":"what do zombies eat"}' },
  message: 'hook',
  dialogState: 'Fulfilled',
  slotToElicit: null }
{ path: 'questions/unit-test.1', method: 'DELETE' }
Request
response:
Loading:cfn
Loading:fulfillment
Loading:import
Loading:lex-build
Loading:proxy-es

test.js
registered
HTTPS Server listening on %s:%s
{ StackId: 'stackid',
  ResponseURL: 'https://localhost:8000',
  ResourceProperties: { restApiId: '1y6gv1gtb0', value: '0' },
  RequestType: 'Create',
  ResourceType: 'Custom::ApiCompression',
  RequestId: 'unique id for this create request',
  LogicalResourceId: 'MyTestResource' }
REQUEST RECEIVED:

cfn-lambda: Delegating to Create handler.
Checking for long running configs...
Did not find valid LongRunning configs, proceed as normal req: %j
RESPONSE: %j
REPLYING TO: %s
STATUS: %s
HEADERS: %j
Success:undefined
data:undefined
{ StackId: 'stackid',
  ResponseURL: 'https://localhost:8000',
  ResourceProperties: { restApiId: '1y6gv1gtb0', value: '0' },
  RequestType: 'Update',
  ResourceType: 'Custom::ApiCompression',
  RequestId: 'unique id for this create request',
  LogicalResourceId: 'MyTestResource' }
REQUEST RECEIVED:

cfn-lambda: Delegating to Update handler.
Checking for long running configs...
Did not find valid LongRunning configs, proceed as normal req: %j
RESPONSE: %j
REPLYING TO: %s
STATUS: %s
HEADERS: %j
Success:undefined
data:undefined
{ StackId: 'stackid',
  ResponseURL: 'https://localhost:8000',
  ResourceProperties: { restApiId: '1y6gv1gtb0', value: '0' },
  RequestType: 'Delete',
  ResourceType: 'Custom::ApiCompression',
  RequestId: 'unique id for this create request',
  LogicalResourceId: 'MyTestResource' }
REQUEST RECEIVED:

cfn-lambda: Delegating to Delete handler.
Checking for long running configs...
Did not find valid LongRunning configs, proceed as normal req: %j
RESPONSE: %j
REPLYING TO: %s
STATUS: %s
HEADERS: %j
Success:undefined
data:undefined
starting
tries left:10
